(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{296:function(s,t,a){"use strict";a.r(t);var n=a(14),r=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"使用string存储utf-8编码的文本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用string存储utf-8编码的文本"}},[s._v("#")]),s._v(" 使用String存储utf-8编码的文本")]),s._v(" "),t("p",[s._v("我们在第4章中讨论了字符串，但现在我们将更深入地研究它们。新的Rustaceans通常会因为三个原因而卡在字符串上:Rust倾向于暴露可能的错误，字符串的数据结构比许多程序员认为的更复杂，以及UTF-8。当您使用其他编程语言时，这些因素结合在一起可能会显得很困难。")]),s._v(" "),t("p",[s._v("我们在集合的上下文中讨论字符串，因为字符串被实现为字节的集合，加上一些方法，在这些字节被解释为文本时提供有用的功能。在本节中，我们将讨论每种集合类型都具有的"),t("code",[s._v("String")]),s._v("上的操作，例如创建、更新和读取。我们还将讨论"),t("code",[s._v("String")]),s._v("与其他集合的不同之处，即由于人和计算机解释"),t("code",[s._v("String")]),s._v("数据的方式不同，索引到String是如何变得复杂的。")]),s._v(" "),t("h2",{attrs:{id:"什么是string"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是string"}},[s._v("#")]),s._v(" 什么是String？")]),s._v(" "),t("p",[s._v("我们首先定义术语字符串的含义。Rust在核心语言中只有一个字符串类型，这就是字符串片str，通常以其借用的形式&str出现。在第4章中，我们讨论了字符串片，它是对存储在其他地方的一些UTF-8编码的字符串数据的引用。例如，字符串字面值存储在程序的二进制文件中，因此是字符串片。")]),s._v(" "),t("p",[s._v("String类型是由Rust的标准库提供的，而不是编码到核心语言中，它是一种可增长的、可变的、拥有的、UTF-8编码的字符串类型。当Rustaceans在Rust中引用“字符串”时，他们可能指的是String或字符串切片&str类型，而不仅仅是其中一种类型。虽然本节主要是关于String的，但这两种类型在Rust的标准库中都有大量使用，而且String和字符串片都是UTF-8编码的。")]),s._v(" "),t("h2",{attrs:{id:"创建一个新的string"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建一个新的string"}},[s._v("#")]),s._v(" 创建一个新的String")]),s._v(" "),t("p",[t("code",[s._v("Vec<T>")]),s._v("中可用的许多相同的操作也可用于String，因为String实际上是作为一个字节向量的包装器实现的，具有一些额外的保证、限制和功能。与"),t("code",[s._v("Vec<T>")]),s._v("和String以相同方式工作的一个函数示例是创建实例的新函数，如清单8-11所示。")]),s._v(" "),t("div",{staticClass:"language-rust line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-rust"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("mut")]),s._v(" s "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("new")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("清单8-11:创建一个新的空"),t("code",[s._v("String")])]),s._v(" "),t("p",[s._v("这一行创建了一个名为"),t("code",[s._v("s")]),s._v("的新空字符串，然后我们可以将数据加载到其中。通常，我们会有一些初始数据，我们想用它们开始创建字符串。为此，我们使用"),t("code",[s._v("to_string")]),s._v("方法，该方法可用于实现"),t("code",[s._v("Display")]),s._v("特征的任何类型，就像字符串字面量一样。清单8-12显示了两个示例。")]),s._v(" "),t("div",{staticClass:"language-rust line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-rust"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" data "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"initial contents"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" s "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("to_string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// the method also works on a literal directly:")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" s "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"initial contents"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("to_string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("清单8-12:使用"),t("code",[s._v("to_string")]),s._v("方法从字符串字面量创建"),t("code",[s._v("String")])]),s._v(" "),t("p",[s._v("上面的代码创建了一个包含"),t("code",[s._v("initial contents")]),s._v("的字符串。")]),s._v(" "),t("p",[s._v("我们也可以使用"),t("code",[s._v("String::from")]),s._v("方法来通过字面量创建"),t("code",[s._v("String")]),s._v("。清单8-13中的代码等价于清单8-12中使用"),t("code",[s._v("to_string")]),s._v("的代码。")]),s._v(" "),t("div",{staticClass:"language-rust line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-rust"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" s "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"initial contents"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("清单8-13:使用"),t("code",[s._v("String::from")]),s._v("函数从字符串字面量创建一个"),t("code",[s._v("String")])]),s._v(" "),t("p",[s._v("因为字符串被用于如此多的事情，我们可以为字符串使用许多不同的通用api，这为我们提供了许多选项。有些可能看起来多余，但它们都有自己的位置!在本例中，"),t("code",[s._v("String::from")]),s._v("和"),t("code",[s._v("to_string")]),s._v("执行相同的操作，因此选择哪一个取决于对样式和可读性的考量。")]),s._v(" "),t("p",[s._v("记住，字符串是UTF-8编码的，因此可以在其中包含任何正确编码的数据，如清单8-14所示。")]),s._v(" "),t("div",{staticClass:"language-rust line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-rust"}},[t("code",[s._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" hello "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"السلام عليكم"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" hello "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Dobrý den"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" hello "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" hello "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"שָׁלוֹם"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" hello "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"नमस्ते"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" hello "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"こんにちは"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" hello "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"안녕하세요"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" hello "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"你好"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" hello "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Olá"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" hello "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Здравствуйте"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" hello "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hola"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[s._v("清单8-14:在字符串中存储不同语言的问候语")]),s._v(" "),t("p",[s._v("所有这些都是有效的"),t("code",[s._v("String")]),s._v("值。")]),s._v(" "),t("h2",{attrs:{id:"更新string"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#更新string"}},[s._v("#")]),s._v(" 更新String")]),s._v(" "),t("p",[s._v("String可以增加大小，它的内容可以改变，就像"),t("code",[s._v("Vec<T>")]),s._v("的内容一样，如果您将更多的数据推入其中。此外，您还可以方便地使用+操作符或"),t("code",[s._v("format!")]),s._v("宏连接字符串值。")]),s._v(" "),t("h3",{attrs:{id:"使用push-str和push在末尾添加字符串"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用push-str和push在末尾添加字符串"}},[s._v("#")]),s._v(" 使用"),t("code",[s._v("push_str")]),s._v("和"),t("code",[s._v("push")]),s._v("在末尾添加字符串")]),s._v(" "),t("p",[s._v("我们可以通过使用"),t("code",[s._v("push_str")]),s._v("方法来增加一个字符串片，如清单8-15所示。")]),s._v(" "),t("div",{staticClass:"language-rust line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-rust"}},[t("code",[s._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("mut")]),s._v(" s "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"foo"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("push_str")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("清单8-15:使用"),t("code",[s._v("push_str")]),s._v("方法将字符串片追加到"),t("code",[s._v("string")])]),s._v(" "),t("p",[s._v("在这两行之后，s将包含foobar。"),t("code",[s._v("push_str")]),s._v("方法接受一个字符串片，因为我们不一定想获得参数的所有权。在清单8-16的代码中，我们希望能够在将s2的内容追加到s1之后使用s2。")]),s._v(" "),t("div",{staticClass:"language-rust line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-rust"}},[t("code",[s._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("mut")]),s._v(" s1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"foo"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" s2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    s1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("push_str")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("println!")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s2 is {}"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" s2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("清单8-16:在将内容追加到"),t("code",[s._v("string")]),s._v("之后使用字符串片")]),s._v(" "),t("p",[s._v("如果push_str方法拥有s2的所有权，我们将无法在最后一行打印它的值。然而，这段代码按照我们的预期工作!")]),s._v(" "),t("p",[t("code",[s._v("push")]),s._v("方法将单个字符作为参数并将其添加到"),t("code",[s._v("String")]),s._v("中。清单8-17使用"),t("code",[s._v("push")]),s._v("方法将字母“l”添加到"),t("code",[s._v("String")]),s._v("中。")]),s._v(" "),t("div",{staticClass:"language-rust line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-rust"}},[t("code",[s._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("mut")]),s._v(" s "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"lo"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("push")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'l'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("清单8-17:使用push向String值添加一个字符")]),s._v(" "),t("p",[s._v("结果，"),t("code",[s._v("s")]),s._v("将包含"),t("code",[s._v("lol")]),s._v("。")]),s._v(" "),t("h3",{attrs:{id:"用-运算符或format-宏拼接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#用-运算符或format-宏拼接"}},[s._v("#")]),s._v(" 用+运算符或"),t("code",[s._v("format!")]),s._v("宏拼接")]),s._v(" "),t("p",[s._v("通常，您会希望合并两个现有的字符串。一种方法是使用+操作符，如清单8-18所示。")]),s._v(" "),t("div",{staticClass:"language-rust line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-rust"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" s1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello, "')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" s2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"world!"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" s3 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" s1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("s2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// note s1 has been moved here and can no longer be used")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("清单8-18:使用+运算符将两个"),t("code",[s._v("String")]),s._v("值合并为一个新的"),t("code",[s._v("String")]),s._v("值")]),s._v(" "),t("p",[s._v("字符串"),t("code",[s._v("s3")]),s._v("将包含"),t("code",[s._v("Hello, world")]),s._v("! "),t("code",[s._v("s1")]),s._v("在加法之后不再有效的原因，以及我们使用s2的引用的原因，都与使用+操作符时调用的方法的签名有关。+操作符使用add方法，其签名如下:")]),s._v(" "),t("div",{staticClass:"language-rust line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-rust"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fn")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-definition function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("str")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("->")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("在标准库中，您将看到使用泛型和相关类型定义的"),t("code",[s._v("add")]),s._v("。在这里，我们写上了具体的类型，这是当我们用String值调用这个方法时发生的情况。我们将在第10章讨论泛型。这个签名为我们提供了理解+运算符的复杂部分所需的线索。")]),s._v(" "),t("p",[s._v("首先，"),t("code",[s._v("s2")]),s._v("有一个"),t("code",[s._v("&")]),s._v("，这意味着我们将第二个字符串的引用添加到第一个字符串。这是因为add函数中的s形参:我们只能在"),t("code",[s._v("String")]),s._v("对象中添加"),t("code",[s._v("&str")]),s._v(";我们不能把两个"),t("code",[s._v("String")]),s._v("值相加。但是等等——"),t("code",[s._v("&s2")]),s._v("的类型是"),t("code",[s._v("&String")]),s._v("，而不是要添加的第二个参数中指定的"),t("code",[s._v("&str")]),s._v("。那么为什么清单8-18通过了编译呢?")]),s._v(" "),t("p",[s._v("我们能够在"),t("code",[s._v("add")]),s._v("调用中使用"),t("code",[s._v("&s2")]),s._v("的原因是编译器可以将"),t("code",[s._v("&String")]),s._v("参数强制转换为"),t("code",[s._v("&str")]),s._v("。当我们调用"),t("code",[s._v("add")]),s._v("方法时，Rust使用deref强制，在这里将"),t("code",[s._v("&s2")]),s._v("变成"),t("code",[s._v("&s2[..]")]),s._v("。我们将在第15章更深入地讨论deref强制。因为"),t("code",[s._v("add")]),s._v("不拥有"),t("code",[s._v("s")]),s._v("形参的所有权，所以"),t("code",[s._v("s2")]),s._v("在此操作之后仍然是一个有效的"),t("code",[s._v("String")]),s._v("。")]),s._v(" "),t("p",[s._v("其次，我们可以在签名中看到"),t("code",[s._v("add")]),s._v("拥有"),t("code",[s._v("self")]),s._v("的所有权，因为"),t("code",[s._v("self")]),s._v("没有"),t("code",[s._v("&")]),s._v("。这意味着清单8-18中的"),t("code",[s._v("s1")]),s._v("将被移动到"),t("code",[s._v("add")]),s._v("调用中，在此之后将不再有效。虽然"),t("code",[s._v("s3 = s1 + &s2;")]),s._v("看起来它将复制两个字符串并创建一个新的字符串，但是这个语句实际上获得"),t("code",[s._v("s1")]),s._v("的所有权，追加"),t("code",[s._v("s2")]),s._v("内容的副本，然后返回结果的所有权。换句话说，它看起来复制了很多拷贝，但实际上并没有;这个实现比复制更有效。")]),s._v(" "),t("p",[s._v("如果我们需要连接多个字符串，+操作符的行为会变得笨拙:")]),s._v(" "),t("div",{staticClass:"language-rust line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-rust"}},[t("code",[s._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" s1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tic"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" s2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tac"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" s3 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"toe"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" s "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" s1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("s2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("s3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("在这一点上，"),t("code",[s._v("s")]),s._v("将是井字游戏。使用所有的"),t("code",[s._v("+")]),s._v("和"),t("code",[s._v('"')]),s._v("字符，很难看到发生了什么。对于更复杂的字符串组合，我们可以使用"),t("code",[s._v("format!")]),s._v("宏:")]),s._v(" "),t("div",{staticClass:"language-rust line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-rust"}},[t("code",[s._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" s1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tic"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" s2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tac"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" s3 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"toe"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" s "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("format!")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{}-{}-{}"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" s1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" s2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" s3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("这段代码还将"),t("code",[s._v("s")]),s._v("设置为"),t("code",[s._v("tic-tac-toe")]),s._v("。"),t("code",[s._v("format!")]),s._v("宏的工作方式和"),t("code",[s._v("println!")]),s._v("一样，但它不是将输出打印到屏幕上，而是返回一个包含内容的"),t("code",[s._v("String")]),s._v("。这个版本的代码使用"),t("code",[s._v("format!")]),s._v("更容易阅读，并由代码生成"),t("code",[s._v("format!")]),s._v("宏使用引用，因此这个调用不会获得它的任何参数的所有权。")]),s._v(" "),t("h2",{attrs:{id:"string的索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#string的索引"}},[s._v("#")]),s._v(" String的索引")]),s._v(" "),t("p",[s._v("在许多其他编程语言中，通过索引引用字符串中的各个字符是一种有效且常见的操作。但是，如果您试图使用Rust中的索引语法访问"),t("code",[s._v("String")]),s._v("的部分内容，则会得到一个错误。考虑清单8-19中的无效代码。")]),s._v(" "),t("div",{staticClass:"language-rust line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-rust"}},[t("code",[s._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" s1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" h "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" s1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("清单8-19:尝试对"),t("code",[s._v("String")]),s._v("使用索引语法")]),s._v(" "),t("p",[s._v("此代码将导致以下错误:")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cargo")]),s._v(" run\n   Compiling collections v0.1.0 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("file:///projects/collections"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nerror"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("E0277"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(": the "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("String"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" cannot be indexed by "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("integer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n --"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" src/main.rs:3:13\n  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" h "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" s1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("             ^^^^^ "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("String"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" cannot be indexed by "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("integer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" help: the trait "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("Index"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("integer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" is not implemented "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("String"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" help: the following other types implement trait "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("Index"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("Idx"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("String as Index"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("RangeFrom"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("usize"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("String as Index"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("RangeFull"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("String as Index"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("RangeInclusive"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("usize"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("String as Index"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("RangeTo"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("usize"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("String as Index"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("RangeToInclusive"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("usize"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("String as Index"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("std::ops::Range"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("usize"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("str as Index"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("I"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v("\n\nFor "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" information about this error, try "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("rustc "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--explain")]),s._v(" E0277"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\nerror: could not compile "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("collections"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" due to previous error\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br")])]),t("p",[s._v("错误和注释说明了一切:Rust字符串不支持索引。但为什么不呢?要回答这个问题，我们需要讨论Rust如何在内存中存储字符串。")]),s._v(" "),t("h3",{attrs:{id:"内部特征"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内部特征"}},[s._v("#")]),s._v(" 内部特征")]),s._v(" "),t("p",[t("code",[s._v("String")]),s._v("是"),t("code",[s._v("Vec<u8>")]),s._v("的包装器。让我们看看清单8-14中一些正确编码的UTF-8示例字符串。首先，这个:")]),s._v(" "),t("div",{staticClass:"language-rust line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-rust"}},[t("code",[s._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" hello "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hola"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])}),[],!1,null,null,null);t.default=r.exports}}]);